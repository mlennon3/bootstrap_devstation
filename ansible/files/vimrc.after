
set nocompatible
filetype on
filetype plugin on
filetype indent on
syntax on

"XML Folding
let g:xml_syntax_folding=1
au FileType xml setlocal foldmethod=syntax

let maplocalleader = "\<Space>"

"More useful command-line completion
set wildmenu

"Line wrap
set wrap

"Auto-completion menu
set wildmode=list:longest

"Map escape key to jj -- much faster
imap jj <esc>

"Bubble single lines (kicks butt)
""http://vimcasts.org/episodes/bubbling-text/
nmap <C-Up> ddkP
nmap <C-Down> ddp

"Source the vimrc file after saving it. This way, you don't have to reload
"Vim to see the changes.
if has("autocmd")
 autocmd bufwritepost ~/..vimrc.after source ~/.vimrc.after
endif

nmap <C-b> <C-]>

"    "------------------------"
"    "gERDTREE PLUGIN SETTINGS
"    "------------------------"
"    "Shortcut for NERDTreeToggle
"    nmap ,nt :NERDTreeToggle

"Show hidden files in NerdTree
let NERDTreeShowHidden=1

syntax enable

"nerdcommenter
map <LocalLeader>/<Space> :call NERDComment('n', "Invert")<CR>

map <silent> <LocalLeader>rt :!/usr/local/bin/ctags -R --exclude=".git\|.svn\|log\|tmp\|db\|pkg" --extra=+f<CR>

map <silent> <LocalLeader>nt :NERDTreeToggle<CR>
map <silent> <LocalLeader>nr :NERDTree<CR>
map <silent> <LocalLeader>nf :NERDTreeFind<CR>

map <silent> <LocalLeader>tb :TagbarToggle<CR>

map <silent> <LocalLeader>ff :Files<CR>
map <silent> <LocalLeader>ft :Tags<CR>
map <silent> <LocalLeader>fb :Buffers<CR>

map <silent> <LocalLeader>gd :e product_diff.diff<CR>:%!git diff<CR>:setlocal buftype=nowrite<CR>

map <silent> <LocalLeader>nh :noh<CR>

map <silent> <LocalLeader>sp :set paste<CR><D-v>:set nopaste<CR>
map <silent> <LocalLeader>snp :set nopaste<CR>

map <LocalLeader>aw :Ack '<C-R><C-W>'

map <silent> <LocalLeader>bd :bufdo :bd<CR>

nnoremap <silent> <LocalLeader>ee :tabe ~/.vimrc.after<CR>
nnoremap <silent> <LocalLeader>ss :source ~/.vimrc.after<CR>

nnoremap <silent> <LocalLeader><CR> :tabe<CR>

nnoremap <silent> <LocalLeader>[ :tabp<CR>
nnoremap <silent> <LocalLeader>] :tabn<CR>

nnoremap <silent> <LocalLeader><Space> :noh<CR>
nnoremap <silent> <LocalLeader>ww :%s/\s\+$//<CR>:let @/=''<CR><C-o>

nnoremap <silent> <LocalLeader>; :

"cut/copy to clipboard
vmap <C-c> "+yi
vmap <C-x> "+c

"Fuzzy search to current file
let g:ctrlp_working_path_mode = 'rw'

" leader w to write
nnoremap <LocalLeader>w :w<CR>

"Snipmate
:filetype plugin on

"Control-d in visual mode to duplicate the selected text and paste it after
"cursor
map <C-d> y'>p

"Enter/shift-enter in normal mode to insert line after/before and remain
"in normal mode
nmap <S-Enter> O<Esc>j
nmap <CR> o<Esc>

"use exuberant ctags
let g:easytags_cmd = '/usr/local/bin/ctags'
let g:easytags_async = 1
let g:easytags_updatetime_min = 5000
let g:easytags_auto_highlight = 0


set scrolloff=4                 " Minimum lines to keep above and below cursor
set splitright                  " Puts new vsplit windows to the right of the current
set splitbelow                  " Puts new split windows to the bottom of the current

let g:ale_javascript_eslint_executable = '/usr/local/bin/eslint'
let g:ale_javascript_eslint_options = '--env mocha --env node --env browser'

let g:ale_linters = {
\   'python': ['flake8'],
\   'javascript': [],
\}

"Show search matches as typing
set incsearch

set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*/venv/*,**/*/node_modules/*,**/env/,build/**,dist/**,assets/node_modules/

source /usr/local/opt/fzf/plugin/fzf.vim
let g:ackprg = '/usr/local/bin/ag --ignore **/*/node_modules --ignore **/dist/ --vimgrep'

"open current buffer in new tab
noremap <C-t> <C-W>T

Obsession
